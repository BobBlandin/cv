inputs:
  private_key_id:
    required: true
  private_key:
    required: true
  service_account_mail:
    required: true
  scope:
    required: true

outputs:
  access_token:
    value: ${{ steps.request_google_token.outputs.access_token }}

runs:
  using: "composite"
  steps:
    - shell: bash
      id: request_google_token
      env:
        private_key_id: ${{ inputs.private_key_id }}
        private_key: ${{ inputs.private_key }}
        service_account_mail: ${{ inputs.service_account_mail }}
        scope: ${{ inputs.scope }}
      run: |
        # Build header
        header=$(echo -n '{"alg":"RS256","typ":"JWT","kid":"'$private_key_id'"}' | base64 -w0)

        #epoch dates calculation
        exp=$(date -d "+30 min" +'%s')
        iat=$(date +'%s')

        # Build payload
        payload=$(echo -n '{"iss":"'$service_account_mail'","scope":"'$scope'","aud":"https://oauth2.googleapis.com/token","exp":'$exp',"iat":'$iat'}' | base64 | sed ':a;N;$!ba;s/\n//g')

        # Build signature
        sign_alg=$header.$payload
        echo $private_key | base64 -d > private_key.pem
        firma=$(echo -n $sign_alg  | openssl dgst -sha256 -sign private_key.pem | base64 | sed ':a;N;$!ba;s/\n//g')
        rm private_key.pem

        # Token request call
        jwt_url=$(echo -n $header.$payload.$firma | sed 's/\//%2F/g' | sed 's/\+/%2B/g' | sed 's/=/%3D/g')

        token_response=$(curl -d 'grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion='$jwt_url https://oauth2.googleapis.com/token)

        if ! echo "$token_response" | grep -q "access_token"; then
          echo "Error: token response does not contain the field \"access_token\""
          echo "$token_response"
          exit 2
        fi

        access_token=$(echo "$token_response" | jq -r '.access_token')

        echo "access_token=$access_token" >> $GITHUB_OUTPUT
